AllCops:
  RunRailsCops: false

Lint/Void:
  Enabled: false

Style/SingleSpaceBeforeFirstArg:
  Enabled: false

Style/Proc:
  Enabled: false

Documentation:
  Enabled: false

Style/EmptyLines:
  Enabled: false

Style/AlignArray:
  Enabled: false

Style/TrailingWhitespace:
  Enabled: false

Style/EmptyLines:
  Enabled: false

Style/EmptyLineBetweenDefs:
  Enabled: false

Style/EmptyLinesAroundBody:
  Enabled: false

Style/SpaceAfterControlKeyword:
  Enabled: false

Style/CaseIndentation:
  Enabled: false

Style/CommentIndentation:
  Enabled: false

Style/IndentationConsistency:
  Enabled: false

Style/IndentationWidth:
  Enabled: false

Style/Not:
  Enabled: false

Style/EachWithObject:
  Enabled: false

Style/RescueModifier:
  Enabled: false

Style/CaseEquality:
  Enabled: false

Style/EmptyLinesAroundAccessModifier:
  Enabled: false

Style/AccessorMethodName:
  Enabled: false

Style/Lambda:
  Enabled: false

Style/SpaceInsideBrackets:
  Enabled: false

Style/IndentArray:
  Enabled: false

Style/IndentHash:
  Enabled: false

# Indent private/protected/public as deep as method definitions
Style/AccessModifierIndentation:
  Enabled: false
  EnforcedStyle: indent
  SupportedStyles:
    - outdent
    - indent

# Align the elements of a hash literal if they span more than one line.
Style/AlignHash:
  Enabled: false
  # Alignment of entries using hash rocket as separator. Valid values are:
  #
  # key - left alignment of keys
  #   'a' => 2
  #   'bb' => 3
  # separator - alignment of hash rockets, keys are right aligned
  #    'a' => 2
  #   'bb' => 3
  # table - left alignment of keys, hash rockets, and values
  #   'a'  => 2
  #   'bb' => 3
  EnforcedHashRocketStyle: key
  # Alignment of entries using colon as separator. Valid values are:
  #
  # key - left alignment of keys
  #   a: 0
  #   bb: 1
  # separator - alignment of colons, keys are right aligned
  #    a: 0
  #   bb: 1
  # table - left alignment of keys and values
  #   a:  0
  #   bb: 1
  EnforcedColonStyle: key
  # Select whether hashes that are the last argument in a method call should be
  # inspected? Valid values are:
  #
  # always_inspect - Inspect both implicit and explicit hashes.
  #   Registers an offense for:
  #     function(a: 1,
  #       b: 2)
  #   Registers an offense for:
  #     function({a: 1,
  #       b: 2})
  # always_ignore - Ignore both implicit and explicit hashes.
  #   Accepts:
  #     function(a: 1,
  #       b: 2)
  #   Accepts:
  #     function({a: 1,
  #       b: 2})
  # ignore_implicit - Ignore only implicit hashes.
  #   Accepts:
  #     function(a: 1,
  #       b: 2)
  #   Registers an offense for:
  #     function({a: 1,
  #       b: 2})
  # ignore_explicit - Ignore only explicit hashes.
  #   Accepts:
  #     function({a: 1,
  #       b: 2})
  #   Registers an offense for:
  #     function(a: 1,
  #       b: 2)
  EnforcedLastArgumentHashStyle: always_inspect
  SupportedLastArgumentHashStyles:
    - always_inspect
    - always_ignore
    - ignore_implicit
    - ignore_explicit

Style/AlignParameters:
  Enabled: false
  # Alignment of parameters in multi-line method calls.
  #
  # The `with_first_parameter` style aligns the following lines along the same
  # column as the first parameter.
  #
  #     method_call(a,
  #                 b)
  #
  # The `with_fixed_indentation` style aligns the following lines with one
  # level of indentation relative to the start of the line with the method call.
  #
  #     method_call(a,
  #       b)
  EnforcedStyle: with_first_parameter
  SupportedStyles:
    - with_first_parameter
    - with_fixed_indentation

Style/AndOr:
  Enabled: false
  # Whether `and` and `or` are banned only in conditionals (conditionals)
  # or completely (always).
  EnforcedStyle: always
  SupportedStyles:
    - always
    - conditionals

Style/BracesAroundHashParameters:
  Enabled: false
  EnforcedStyle: no_braces
  SupportedStyles:
    - braces
    - no_braces

# Indentation of `when`.
Style/CaseIndentation:
  Enabled: false
  IndentWhenRelativeTo: case
  SupportedStyles:
    - case
    - end
  IndentOneStep: false

Style/ClassAndModuleChildren:
  Enabled: false
  # Checks the style of children definitions at classes and modules.
  #
  # Basically there are two different styles:
  #
  # `nested` - have each child on a separate line
  #   class Foo
  #     class Bar
  #     end
  #   end
  #
  # `compact` - combine definitions as much as possible
  #   class Foo::Bar
  #   end
  #
  # The compact style is only forced, for classes / modules with one child.
  EnforcedStyle: nested
  SupportedStyles:
    - nested
    - compact

# Align with the style guide.
Style/CollectionMethods:
  Enabled: false
  # Mapping from undesired method to desired_method
  # e.g. to use `detect` over `find`:
  #
  # CollectionMethods:
  #   PreferredMethods:
  #     find: detect
  PreferredMethods:
    collect: 'map'
    collect!: 'map!'
    inject: 'reduce'
    detect: 'find'
    find_all: 'select'

# Multi-line method chaining should be done with leading dots.
Style/DotPosition:
  Enabled: false
  EnforcedStyle: leading
  SupportedStyles:
    - leading
    - trailing

# Use empty lines between defs.
Style/EmptyLineBetweenDefs:
  Enabled: false
  # If true, this parameter means that single line method definitions don't
  # need an empty line between them.
  AllowAdjacentOneLineDefs: false

# Checks whether the source file has a utf-8 encoding comment or not
Style/Encoding:
  Enabled: false
  EnforcedStyle: always
  SupportedStyles:
    - when_needed
    - always

# Checks use of for or each in multiline loops.
Style/For:
  Enabled: false
  EnforcedStyle: each
  SupportedStyles:
    - for
    - each

# Enforce the method used for string formatting.
Style/FormatString:
  Enabled: false
  EnforcedStyle: format
  SupportedStyles:
    - format
    - sprintf
    - percent

Style/HashSyntax:
  Enabled: false
  EnforcedStyle: ruby19
  SupportedStyles:
    - ruby19
    - hash_rockets

# Checks the indentation of the first key in a hash literal.
Style/IndentHash:
  Enabled: false
  # The value `special_inside_parentheses` means that hash literals with braces
  # that have their opening brace on the same line as a surrounding opening
  # round parenthesis, shall have their first key indented relative to the
  # first position inside the parenthesis.
  # The value `consistent` means that the indentation of the first key shall
  # always be relative to the first position of the line where the opening
  # brace is.
  EnforcedStyle: special_inside_parentheses
  SupportedStyles:
    - special_inside_parentheses
    - consistent

Style/LambdaCall:
  Enabled: false
  EnforcedStyle: call
  SupportedStyles:
    - call
    - braces

Style/NonNilCheck:
  Enabled: false
  # With `IncludeSemanticChanges` set to `true`, this cop reports offenses for
  # `!x.nil?` and autocorrects that and `x != nil` to solely `x`, which is
  # **usually** OK, but might change behavior.
  #
  # With `IncludeSemanticChanges` set to `false`, this cop does not report
  # offenses for `!x.nil?` and does no changes that might change behavior.
  IncludeSemanticChanges: false

Style/StringLiterals:
  Enabled: false
  EnforcedStyle: single_quotes
  SupportedStyles:
    - single_quotes
    - double_quotes

Style/SpaceBeforeBlockBraces:
  Enabled: false
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space

Style/SpaceInsideBlockBraces:
  Enabled: false
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space
  # Valid values are: space, no_space
  EnforcedStyleForEmptyBraces: no_space
  # Space between { and |. Overrides EnforcedStyle if there is a conflict.
  SpaceBeforeBlockParameters: true

Style/SpaceInsideHashLiteralBraces:
  Enabled: false
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  SupportedStyles:
    - space
    - no_space

Style/SymbolProc:
  Enabled: false
  # A list of method names to be ignored by the check.
  # The names should be fairly unique, otherwise you'll end up ignoring lots of code.
  IgnoredMethods:
    - respond_to

Style/TrailingBlankLines:
  Enabled: false
  EnforcedStyle: final_newline
  SupportedStyles:
    - final_newline
    - final_blank_line

##################### Metrics ##################################

Metrics/BlockNesting:
  Enabled: false
  Max: 3

Metrics/ClassLength:
  Enabled: false
  CountComments: false  # count full line comments?
  Max: 100

# Avoid complex methods.
Metrics/CyclomaticComplexity:
  Enabled: false
  Max: 6

Metrics/LineLength:
  Enabled: false
  Max: 80
  AllowURI: true
  URISchemes:
    - http
    - https

Metrics/MethodLength:
  Enabled: false
  CountComments: false  # count full line comments?
  Max: 10

Metrics/ParameterLists:
  Enabled: false
  Max: 5
  CountKeywordArgs: true

Metrics/PerceivedComplexity:
  Enabled: false
  Max: 7
